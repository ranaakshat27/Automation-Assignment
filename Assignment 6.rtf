{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs28\lang9                                                          Assignment-17\par
                                        Agile Methodology & Bug Reporting\par
\ul Section I\par
\ulnone\b0\par
1) What is Agile Testing ?\par
A software testing practice that follows the principles of agile software development is called Agile Testing. It is adaptive, conceptual framework for software development which promotes development iterations throughout the life cycle of the project.\par
It has two main units of delivery : Realeases and Iterations.\par
\par
2) What is the difference between burn-up and burn-down charts ?\par
A burn-up chart shows how much work has been completed and the total scope of the project whereas a  burn-down chart shows the amount of work remaining on a project (the remaining effort).\par
In a burn-up chart the line climbs from the bottom upwards. Both charts use the same axies while In a burn-down chart, the line goes from top to bottom as a team makes progress.\par
\par
3) Define the roles in Scrum ?\par
The Scrum Team consists of three roles, namely a ScrumMaster, a Product Owner, and The Team.\par
\ul\b ScrumMaster :\par
\ulnone\b0 The ScrumMaster is the keeper of the scrum process. He/she is responsible for -\par
Making the process run smoothly.\par
Removing obstacles that impact productivity.\par
Organizing and facilitating the critical meetings.\par
\ul\b Product Owner :\par
\ulnone\b0 The Product Owner is responsible for maximizing the value of the product and the work of the Team. How this is done may vary widely across organizations, Scrum Teams, and individuals. Product Backlog management includes -\par
Expressing Product Backlog items clearly.\par
Ordering the Product Backlog items to best achieve goals and missions.\par
Optimizing the value of the work the Team performs.\par
Ensuring that the Product Backlog is visible, transparent, and clear to all, and shows what the Team will work on further.\par
Ensuring that the Team understands items in the Product Backlog to the level needed.\par
\ul\b The Teamm :\par
\ulnone\b0 The Team is self-organizing and cross-functional. That means the team comprises of analysts, designers, developers, testers, etc. as appropriate and as relevant to the project.\par
Some people in the industry refer to this team as development team. However, such a reference is leading to controversy that the team can have only developers and no other roles. It is an obvious understanding that it is only a misconception. To develop a software product, we require all the roles and that is the essence of scrum \f1\endash  the team will function in collaboration. \par
Optimal Team size is small enough to remain nimble and large enough to complete significant work within a Sprint. The Team size should be kept in the range from five to nine people, if possible. Fewer than five team members decrease interaction and results in smaller productivity gains. Having more than nine members requires too much coordination.\par
\f0\par
4) What is Product Backlog & Sprint Backlog ?\par
\ul\b Product Backlog :\par
\ulnone\b0 It contains a wish list of all the user stories of a product.\par
Prioritized list of features required by the customer.\par
\ul\b Sprint Backlog :\par
\ulnone\b0 Each sprint takes a small chunk of the Release Backlog andgets it Ship-Ready\par
Features to be done this sprint features and expanded into smaller tasks.\par
It is decided, which lists the items that will be completed in the current sprint, taken from the product backlog.\par
\par
5) Explain the difference between a Traditional Waterfall Model and Agile testing.\par
\ul\b Waterfall Model :\par
\ulnone\b0 It is Predictive Model.\par
Focused on planning in details with requirements capture, analysis, design, coding, and testing in a strict, pre-planned sequence.\par
Unsuitable if requirements are likely to change.\par
Iterations are expensive.\par
Difficulty in changing the direction from the planned one.\ul\b\par
Agile testing :\par
\ulnone\b0 It is Adaptive Model.\par
Focused on developing completely developed and tested feature every few weeks.\par
Suitable if project needs change with changing realities.\par
Iterations follow waterfall cycle.\par
\par
6) Explain the Iterative and Incremental Development in Agile ?\par
\ul\b Iterative Development :\par
\ulnone\b0 Iterative development is when teams gradually build up the features and functions but don\rquote t wait until each of these is complete before releasing.\par
They release a basic version of each feature and the add to that feature in subsequent iterative releases, usually based on feedback from the basic version released.\par
\ul\b Incremental Development :\par
\ulnone\b0 Incremental development is a development approach that slices the product into fully working slices that are called increments.\par
Each new increment builds on top of the existing released functionality.\par
\par
7) What qualities should a good Agile tester have ?\par
A good Agile tester should have following qualities :-\par
It should be able to understand the requirements quickly\par
Agile tester should know Agile principals and concepts well\par
As requirements keep changing, tester should understand the risk involve in it\par
Based on the requirements Agile tester should be able to prioritize the work\par
Continue communication between business associates, developers and tester is must\par
\par
8) What is the difference between Epic, User stories & Tasks ?\par
\ul\b Epic :\par
\ulnone\b0 An Epic is useful as placeholders for large requirements. It probably won\rquote t fit into a sprint and should be broken down into stories.  Epics are usually defined during the initial product roadmap and decomposed into stories in the product backlog as more is learned and is usually written in a User Story format. The decomposed stories in an epic have a common objective and a specific outcome or high-level user need or part of the journey or process someone takes in using the service.\par
\ul\b User Stories :\par
\ulnone\b0 User stories are the smallest units of user functionality in agile which can be delivered in one agile sprint.  They are typically estimated using story pointed and defined using INVEST criteria. User stories should deliver a vertical slice of functionality to the customer that is valuable and complete by the end of an iteration. A user story must deliver particular value to the user and must be describable in simple language that outlines the desired outcome.\par
\ul\b Tasks :\par
\ulnone\b0 Tasks are decomposed parts of a story that get into HOW the story will be completed. Tasks can be hour estimated if desired. Tasks are usually defined by the people doing the work (developers, QA, etc), whereas stories and epics are generally created by the customer or the product owner on behalf of the customer. Thus, the tasks no longer need to be understandable by business users and so can be highly technical. The process of breaking a story down into tasks also helps the development team better understand what needs to be done.\par
\par
9) What is a Task-board in Agile ?\par
A task board is a tool used by individuals, teams or organizations to represent work and its path towards completion. This includes tasks that are in progress, finished tasks and upcoming tasks that may be in a backlog. Tasks are usually represented by \lquote cards\rquote  and can be arranged within something as simple as a few columns drawn on a board or dispersed among multiple levels of organization.\par
\par
10) What are the characteristics of a good Agile tester ?\par
The role of a tester in an Agile team includes activities that generate and provide feedback not only on test status, test progress, and product quality, but also on process quality.\par
A good Agile tester should have following characteristics :-\par
It should be able to understand the requirements quickly\par
Agile tester should know Agile principals and concepts well\par
As requirements keep changing, tester should understand the risk involve in it\par
Based on the requirements Agile tester should be able to prioritize the work\par
Continue communication between business associates, developers and tester is must\par
\par
11) When should we use Agile Scrum Methodology ?\par
Agile scrum methodology is good for businesses that need to finish specific projects quickly. It is a project management system that relies on incremental development.\par
There are three core roles: scrum master, product owner and scrum team. All of these people are committed to the scrum project.\par
Scrum master: The scrum master is the facilitator of the scrum development process. In addition to holding daily meetings with the scrum team, the scrum master makes certain that scrum rules are being enforced and applied as intended. The scrum master\rquote s responsibilities also include coaching and motivating the team, removing impediments to sprints, and ensuring that the team has the best possible conditions to meet its goals and produce deliverable products.\par
Product owner: The product owner represents stakeholders, who are typically customers. To ensure the scrum team is always delivering value to stakeholders and the business, the product owner determines product expectations, records changes to the product and administers a scrum backlog, a detailed and constantly updated to-do list for the scrum project. The product owner is also responsible for prioritizing goals for each sprint, based on their value to stakeholders, such that the most important and deliverable features are built in each iteration.\par
Scrum team: The scrum team is a self-organized group of three to nine individuals who have the business, design, analytical and development skills to carry out the actual work, solve problems and produce deliverable products. Members of the scrum team self-administer tasks and are jointly responsible for meeting each sprint\rquote s goals.\par
\par
12) What is Sprint in Agile Methodology ?\par
Sprint is a set period of time during which specific work has to be completed and made ready for review.\par
Each sprint begins with a planning meeting. During the meeting, the product owner (the person requesting the work) and the development team agree upon exactly what work will be accomplished during the sprint. The development team has the final say when it comes to determining how much work can realistically be accomplished during the sprint, and the product owner has the final say on what criteria need to be met for the work to be approved and accepted.\par
\par
13) Why is it important to conduct daily stand-up meetings ?\par
Daily standup meetings are a popular agile ceremony, especially for engineering and development teams. This daily habit helps align a team and share progress, stay accountable, and resolve potential problems quickly.\par
The purpose of this post is to share everything you need to know about this cadence. If you are new to this meeting or want to improve an existing standup, you've found the right place.\par
The purpose of a daily standup and its origins\par
Why this cadence is important\par
What questions you need to ask\par
How to run a standup (as a team leader)\par
Potential pitfalls and traps to avoid\par
Running standups as a remote team\par
Optimizing\par
\par
14) What sets Agile Testing apart from other traditional Software Testing Models ?\par
Agile testing involves performing tests alongside software development in order to ensure greater transparency of the development process.\par
In contrast, agile testing enables the team to "move forward (release) with working components while addressing defects in subsequent iterations".\par
It requires regular interaction with customers.\par
This process, however, is based on continuous improvement; changes are made in the next iteration of the testing cycle.\par
The business team is involved in each iteration of Agile testing. Continual feedback reduces the amount of time required to provide feedback for software development work.\par
\par
15) As a tester what should be your approach when requirements change continuously ?\par
When requirement keeps changing, continuously agile tester should take following approach :-\par
Write generic test plans and test cases, which focuses on the intent of the requirement rather than its exact details\par
To understand the scope of change, work closely with the product owners or business analyst\par
Make sure team understand the risks involved in changing requirements especially at the end of the sprint\par
Until the feature is stable, and the requirements are finalized, it is best to wait if you are going to automate the feature\par
Changes can be kept to a minimum by negotiating or implement the changes in the next sprint\par
\par
\ul\b Section II\par
\ulnone\b0\par
1.Which of the following is not a state of a Bug in Bug Life Cycle:\par
A. New\par
B. Open\par
C. Verified\par
D. Deffered\par
E. Critical\par
Ans: E. Critical\par
\par
2. If a defect is delayed for later phases it proves more costly:\par
A. True\par
B. False\par
+\par
Ans: B. False\par
\par
3. Executing the same test case by giving the number of inputs on same build called as ?\par
A. Regression Testing\par
B. Retesting\par
C. Ad-Hoc Testing\par
D. Smoke Testing\par
Ans: B. Retesting\par
\par
4.Boundary value analysis belongs to which testing method ?\par
A. White Box Testing\par
B. Black Box Testing\par
C. Grey Box Testing\par
Ans: B. Black Box Testing\par
\par
5. Executing the same test case on a modified build called as ?\par
A. Sanity Testing\par
B. Monkey Testing\par
C. Retesting\par
D. Regression Testing\par
Ans: D. Regression Testing\par
\par
6.Which is Black-Box Testing method ? \par
A. Code coverage\par
B. Fault injection\par
C. Equivalence Partitioning\par
Ans: C. Equivalence Partitioning\par
\par
7. Informing the developer which bug to be fixed first is called as ?\par
A. Severity\par
B. Priority\par
C. Traceability\par
D. Flexibility\par
Ans: B. Priority\par
\par
8. How severe the bug is affecting the application is called as ?\par
A. Severity\par
B. Priority\par
C. Traceability\par
D. Flexibility\par
Ans: A. Severity\par
\par
9. Which one of the below is not a Bug Tracking tool ?\par
A. Bugzilla\par
B. Team Track\par
C. Selenium\par
Ans: C. Selenium\par
\par
10. What is not present in the test case ?\par
A. Requirement ID\par
B. Test Case ID\par
C. Bug ID\par
Ans: C. Bug ID\par
\par
\par
\par
\par
}
 